What is git?

Version Control System
A History of everything you do to your files
Graph of States

git init - create new repository
(master x [in fish, after prompt] - x = dirty file/not committed)
do not create repo in home dir - if you do by accident, get rid of it

only use git init once per project


git status - gives status report showing status of repo
this is your "bread and butter".


Basic Git Workflow:
unix_notes --> Add/Staging(trying it out) --> commit(snapshot)--> unix_notes
Also, see photo posted on Slack channel


git add _____ (filename)
(git status - note that color code of file name has changed)

How can you tell that file has been added to repo? - use git status

notes file has been added and is ready to be commited

git will tell you that you can undo (unstage)

git commit -m "add useful note here that is a good commit message using verbs like ADD"
-m = modified
good commit message ex = "adding unix notes, first draft"

master and checkmark - done!

git status should say nothing to commit, working directory clean

if you don't do the -m flag, git will open a text editor

commit creates permanent record
1 - changes made to file on stage
2 - ID of person who made change
3 - date/time of change
4 - check slides
5 - check slides




git log = history of repo

git show + id 

ls -a  (shows all, including hidden files)

Final note - dammit, just realized I was supposed to use "touch" to create new text files. Not sure what to do, if it's ok that I didn't actually do it that way. Will be sure to ask after completing assignment, and do over if necessary.

Another final note - realized that I'd somehow gotten out of my isabellaorgan directory in my notes branch and see that on github in my notes branch, both unix_notes and git_notes exist outside of my isabella organ directory. Went back to terminal, and added both files to isabellaorgan, and removed the extra files that were ouside the directory. Unix_notes WAS actually in the directory on Github. Would like to figure out how to remove the files that are outside the directory on Github, if that is even possible.